// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentView = 'day';
let appData = {
    categories: {
        main: ['–ù–µ—Å—É–¥–∞.–ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ', '–ù–µ—Å—É–¥–∞.—Å—Ç—Ä–∞—Ö–æ–≤–∞—è', '—Å–µ–º—å—è.–¥–æ–∫—É–º–µ–Ω—Ç—ã'],
        weekly: ['–∑–¥–æ—Ä–æ–≤—å–µ', '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π', '—Ä–∞–∑–≤–∏—Ç–∏–µ']
    },
    tasks: {
        yearly: [],
        quarterly: [],
        monthly: [],
        weekly: [],
        daily: [],
        regular: [],
        single: [],
        chaos: [],
        weeklyRegular: []
    },
    settings: {
        notifications: true,
        theme: 'light'
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    loadData();
    setupNavigation();
    showView('day');
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function setupNavigation() {
    const navButtons = document.querySelectorAll('.nav-btn');
    navButtons.forEach(btn => {
        btn.addEventListener('click', function() {
            const view = this.getAttribute('data-view');
            showView(view);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
            navButtons.forEach(b => b.classList.remove('active'));
            this.classList.add('active');
        });
    });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∏–¥–∞–º–∏
function showView(viewName) {
    currentView = viewName;
    const mainContent = document.getElementById('main-content');
    
    switch(viewName) {
        case 'day':
            mainContent.innerHTML = getDayView();
            break;
        case 'calendar':
            mainContent.innerHTML = getCalendarView();
            break;
        case 'week':
            mainContent.innerHTML = getWeekView();
            break;
        case 'chaos':
            mainContent.innerHTML = getChaosView();
            break;
        case 'month':
            mainContent.innerHTML = getMonthView();
            break;
        case 'quarter':
            mainContent.innerHTML = getQuarterView();
            break;
        case 'year':
            mainContent.innerHTML = getYearView();
            break;
        default:
            mainContent.innerHTML = '<p>–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>';
    }
}

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –≤–∏–¥–æ–≤ (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç—ã–µ)
function getDayView() {
    return `
        <h2>–ü–ª–∞–Ω—ã –Ω–∞ –¥–µ–Ω—å</h2>
        <div class="day-container">
            <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –∑–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</p>
            <button class="btn btn-primary">–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É</button>
        </div>
    `;
}

function getCalendarView() {
    return `
        <h2>–ö–∞–ª–µ–Ω–¥–∞—Ä—å</h2>
        <div class="calendar-container">
            <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—å</p>
        </div>
    `;
}

function getWeekView() {
    return `
        <h2>–ù–µ–¥–µ–ª—å–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
        <div class="week-container">
            <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –Ω–µ–¥–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏</p>
        </div>
    `;
}

function getChaosView() {
    const chaosItems = appData.tasks.chaos || [];
    
    let html = `
        <h2>–•–∞–æ—Å - –∏–¥–µ–∏ –∏ –º—ã—Å–ª–∏</h2>
        <div class="chaos-container">
            
            <!-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ -->
            <div class="category-management">
                <h3>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
                <div class="category-controls">
                    <input type="text" id="newCategoryInput" placeholder="–ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è" class="task-input">
                    <button onclick="addCategory()" class="btn btn-primary">–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é</button>
                </div>
                <div class="categories-list">
                    ${appData.categories.main.map((cat, index) => `
                        <span class="category-tag">
                            ${cat}
                            <button onclick="editCategory(${index}, '${cat}')" class="btn-tiny">‚úèÔ∏è</button>
                            <button onclick="deleteCategory(${index})" class="btn-tiny">üóëÔ∏è</button>
                        </span>
                    `).join('')}
                </div>
            </div>
            
            <!-- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ -->
            <div class="add-task-section">
                <input type="text" id="chaosInput" placeholder="–î–æ–±–∞–≤—å—Ç–µ –∏–¥–µ—é –∏–ª–∏ –∑–∞–¥–∞—á—É..." class="task-input">
                <select id="chaosCategory" class="category-select">
                    <option value="">–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                    ${appData.categories.main.map(cat => `<option value="${cat}">${cat}</option>`).join('')}
                </select>
                <button onclick="addChaosItem()" class="btn btn-success">–î–æ–±–∞–≤–∏—Ç—å</button>
            </div>
            
            <div class="chaos-list">
    `;
    
    if (chaosItems.length === 0) {
        html += '<p class="empty-message">–ü–æ–∫–∞ –Ω–∏–∫–∞–∫–∏—Ö –∏–¥–µ–π –Ω–µ—Ç. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é!</p>';
    } else {
        chaosItems.forEach((item, index) => {
            html += `
                <div class="chaos-item">
                    <div class="task-content">
                        <span class="task-text">${item.text}</span>
                        ${item.category ? `<span class="task-category">${item.category}</span>` : ''}
                    </div>
                    <div class="task-actions">
                        <button onclick="editChaosItem(${index})" class="btn-small btn-edit">‚úèÔ∏è</button>
                        <button onclick="deleteChaosItem(${index})" class="btn-small btn-delete">üóëÔ∏è</button>
                    </div>
                </div>
            `;
        });
    }
    
    html += `
            </div>
        </div>
    `;
    
    return html;
}

function getMonthView() {
    return `
        <h2>–ú–µ—Å—è—á–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
        <div class="month-container">
            <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –º–µ—Å—è—á–Ω—ã–µ –ø–ª–∞–Ω—ã</p>
        </div>
    `;
}

function getQuarterView() {
    return `
        <h2>–ö–≤–∞—Ä—Ç–∞–ª—å–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
        <div class="quarter-container">
            <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –∫–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã</p>
        </div>
    `;
}

function getYearView() {
    return `
        <h2>–ì–æ–¥–æ–≤–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
        <div class="year-container">
            <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –≥–æ–¥–æ–≤—ã–µ –ø–ª–∞–Ω—ã</p>
        </div>
    `;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
function loadData() {
    const savedData = localStorage.getItem('taskPlannerData');
    if (savedData) {
        appData = { ...appData, ...JSON.parse(savedData) };
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
function saveData() {
    localStorage.setItem('taskPlannerData', JSON.stringify(appData));
}
// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –•–∞–æ—Å–æ–º
function addChaosItem() {
    const input = document.getElementById('chaosInput');
    const categorySelect = document.getElementById('chaosCategory');
    
    const text = input.value.trim();
    if (!text) return;
    
    const newItem = {
        text: text,
        category: categorySelect.value,
        created: new Date().toISOString()
    };
    
    appData.tasks.chaos.push(newItem);
    saveData();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥
    showView('chaos');
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    setTimeout(() => {
        document.getElementById('chaosInput').value = '';
        document.getElementById('chaosCategory').value = '';
    }, 100);
}

function deleteChaosItem(index) {
    if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∏–¥–µ—é?')) {
        appData.tasks.chaos.splice(index, 1);
        saveData();
        showView('chaos');
    }
}

function editChaosItem(index) {
    const item = appData.tasks.chaos[index];
    const newText = prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:', item.text);
    
    if (newText !== null && newText.trim()) {
        appData.tasks.chaos[index].text = newText.trim();
        saveData();
        showView('chaos');
    }
}
